{"version":3,"file":"static/js/915.54e6d06e.chunk.js","mappings":"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","sources":["components/Blog/BlogPostPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n// Import only the languages we actually use\nimport javascript from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport python from 'react-syntax-highlighter/dist/esm/languages/hljs/python';\nimport bash from 'react-syntax-highlighter/dist/esm/languages/hljs/bash';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport json from 'react-syntax-highlighter/dist/esm/languages/hljs/json';\n\nimport { getBlogPostBySlugWithContent, getRelatedPosts, getCategoryInfo } from '../../utils/contentLoader';\n\n// Register only the languages we need\nSyntaxHighlighter.registerLanguage('javascript', javascript);\nSyntaxHighlighter.registerLanguage('jsx', javascript); // JSX uses JavaScript highlighting\nSyntaxHighlighter.registerLanguage('python', python);\nSyntaxHighlighter.registerLanguage('bash', bash);\nSyntaxHighlighter.registerLanguage('css', css);\nSyntaxHighlighter.registerLanguage('json', json);\n\nconst BlogPostPage = () => {\n  const { slug } = useParams();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [relatedPosts, setRelatedPosts] = useState([]);\n\n  useEffect(() => {\n    const loadPost = async () => {\n      try {\n        setLoading(true);\n        const postData = await getBlogPostBySlugWithContent(slug);\n        if (!postData) {\n          throw new Error('Post not found');\n        }\n        setPost(postData);\n\n        // Load related posts\n        const related = getRelatedPosts(postData, 3);\n        setRelatedPosts(related);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (slug) {\n      loadPost();\n    }\n  }, [slug]);\n\n  if (loading) {\n    return (\n      <section className=\"py-20 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p className=\"text-gray-600 dark:text-gray-300\">Loading blog post...</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (error) {\n    return (\n      <section className=\"py-20 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center\">\n            <h3 className=\"text-lg font-semibold text-red-600 dark:text-red-400 mb-2\">Error Loading Post</h3>\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{error}</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (!post) return null;\n\n  const categoryInfo = getCategoryInfo(post.category);\n\n  return (\n    <section className=\"py-20 bg-gray-50 dark:bg-gray-900\">\n      <div className=\"container mx-auto px-4\">\n        {/* Header */}\n        <div className=\"mb-8 flex items-center justify-between border-b border-gray-200 dark:border-gray-700 pb-6\">\n          <div className=\"flex items-center space-x-4\">\n            <span className={`${categoryInfo.color} px-3 py-1 rounded-full text-sm font-medium`}>\n              {post.category}\n            </span>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {post.readTime}\n            </span>\n          </div>\n        </div>\n\n        {/* Content */}\n        <article className=\"max-w-3xl mx-auto prose prose-lg dark:prose-invert\">\n          {/* Post Header */}\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">{post.title}</h1>\n          <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 mb-8\">\n            <div className=\"flex items-center space-x-4\">\n              <span>By {post.author}</span>\n              <span>â€¢</span>\n              <span>{new Date(post.date).toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              })}</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              {post.tags.map((tag, index) => (\n                <span key={index} className=\"bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-xs\">\n                  #{tag}\n                </span>\n              ))}\n            </div>\n          </div>\n\n          {/* Post Content */}\n          <ReactMarkdown\n            rehypePlugins={[rehypeRaw]}\n            components={{\n              code({ node, inline, className, children, ...props }) {\n                const match = /language-(\\w+)/.exec(className || '');\n                return !inline && match ? (\n                  <SyntaxHighlighter\n                    style={tomorrow}\n                    language={match[1]}\n                    PreTag=\"div\"\n                    className=\"rounded-lg my-6\"\n                    {...props}\n                  >\n                    {String(children).replace(/\\n$/, '')}\n                  </SyntaxHighlighter>\n                ) : (\n                  <code className={className} {...props}>\n                    {children}\n                  </code>\n                );\n              },\n              h1: ({ children }) => (\n                <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mt-8 mb-4\">\n                  {children}\n                </h1>\n              ),\n              h2: ({ children }) => (\n                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mt-6 mb-3\">\n                  {children}\n                </h2>\n              ),\n              h3: ({ children }) => (\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mt-4 mb-2\">\n                  {children}\n                </h3>\n              ),\n              p: ({ children }) => (\n                <p className=\"text-gray-700 dark:text-gray-300 mb-4 leading-relaxed\">\n                  {children}\n                </p>\n              ),\n              ul: ({ children }) => (\n                <ul className=\"list-disc list-inside text-gray-700 dark:text-gray-300 mb-4 space-y-1\">\n                  {children}\n                </ul>\n              ),\n              ol: ({ children }) => (\n                <ol className=\"list-decimal list-inside text-gray-700 dark:text-gray-300 mb-4 space-y-1\">\n                  {children}\n                </ol>\n              ),\n              blockquote: ({ children }) => (\n                <blockquote className=\"border-l-4 border-blue-500 pl-4 italic text-gray-600 dark:text-gray-400 mb-4\">\n                  {children}\n                </blockquote>\n              ),\n              a: ({ children, href }) => (\n                <a\n                  href={href}\n                  className=\"text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 underline\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {children}\n                </a>\n              ),\n            }}\n          >\n            {post.content}\n          </ReactMarkdown>\n\n          {/* Related Posts */}\n          {relatedPosts.length > 0 && (\n            <div className=\"mt-12 pt-8 border-t border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\">\n                Related Posts\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {relatedPosts.map((relatedPost) => (\n                  <article key={relatedPost.id} className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 hover:shadow-md transition-shadow duration-200\">\n                    <div className=\"mb-2\">\n                      <span className={`${getCategoryInfo(relatedPost.category).color} px-2 py-1 rounded text-xs font-medium`}>\n                        {relatedPost.category}\n                      </span>\n                    </div>\n                    <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200\">\n                      <Link to={`/blog/${relatedPost.slug}`} className=\"hover:underline\">\n                        {relatedPost.title}\n                      </Link>\n                    </h4>\n                    <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-2\">\n                      {relatedPost.excerpt}\n                    </p>\n                    <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n                      <span>{new Date(relatedPost.date).toLocaleDateString()}</span>\n                      <span>{relatedPost.readTime}</span>\n                    </div>\n                  </article>\n                ))}\n              </div>\n            </div>\n          )}\n        </article>\n      </div>\n    </section>\n  );\n};\n\nexport default BlogPostPage;\n"],"names":["SyntaxHighlighter","registerLanguage","javascript","python","bash","css","json","BlogPostPage","slug","useParams","post","setPost","useState","loading","setLoading","error","setError","relatedPosts","setRelatedPosts","useEffect","async","postData","getBlogPostBySlugWithContent","Error","related","getRelatedPosts","err","message","loadPost","_jsx","className","children","_jsxs","categoryInfo","getCategoryInfo","category","concat","color","readTime","title","author","Date","date","toLocaleDateString","year","month","day","tags","map","tag","index","ReactMarkdown","rehypePlugins","rehypeRaw","components","code","_ref","node","inline","props","_objectWithoutProperties","_excluded","match","exec","_objectSpread","style","tomorrow","language","PreTag","String","replace","h1","_ref2","h2","_ref3","h3","_ref4","p","_ref5","ul","_ref6","ol","_ref7","blockquote","_ref8","a","_ref9","href","target","rel","content","length","relatedPost","Link","to","excerpt","id"],"sourceRoot":""}